name: CI - React Native Expo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Stap 1: Haal de code op
      - name: Checkout code
        uses: actions/checkout@v3

      # Stap 2: Installeer Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.17.0

      # Stap 3: Installeer Expo CLI en EAS CLI
      - name: Install Expo CLI and EAS CLI
        run: |
          npm install -g expo-cli eas-cli

      # Stap 4: Stel Expo token in
      - name: Set Expo token
        run: echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV

      # Stap 5: Installeer projectafhankelijkheden
      - name: Install dependencies
        working-directory: ${{ github.workspace }}/StickerSmash
        run: npm install

      # Stap 6: Voer tests uit
      - name: Run Tests
        working-directory: ${{ github.workspace }}/StickerSmash
        run: npm run test

      # Stap 7: Bouw APK met EAS
      - name: Build APK with EAS
        working-directory: ${{ github.workspace }}/StickerSmash
        run: |
          eas build --platform android --profile production --non-interactive

      # Stap 8: Controleer of jq geÃ¯nstalleerd is en zoek naar de voltooide build
      - name: Controleer jq en haal build URL op
        id: get_build_url
        run: |
          if ! command -v jq &> /dev/null; then
            echo "jq is not installed. Installing jq..."
            sudo apt-get install jq
          else
            echo "jq is already installed."
          fi
          BUILD_URL=$(eas build:list --limit 1 --status finished --json --non-interactive | jq -r ".\"[0]\".artifacts.buildUrl")
          echo "BUILD_URL=$BUILD_URL" >> $GITHUB_ENV

      # Stap 9: Download de APK
      - name: Download APK
        run: |
          curl -L ${{ env.BUILD_URL }} -o ${{ github.workspace }}/StickerSmash/build/app-release.apk

      # Stap 10: Run Maestro Cloud Test
      - name: Run Maestro Cloud Test
        uses: mobile-dev-inc/action-maestro-cloud@v1.1.0
        with:
          api-key: ${{ secrets.MAESTRO_CLOUD_API_KEY }}
          app-file: ${{ github.workspace }}/StickerSmash/build/app-release.apk
          flow-file: .maestro/exploreTest.yaml
          async: true
